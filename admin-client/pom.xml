<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.hackerstudy</groupId>
	<artifactId>admin-client</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>admin-client</name>
	<description>springbootadmin客户端</description>

	<!-- 继承本项目的父工程 -->
	<parent>
		<groupId>com.hackerstudy</groupId>
		<artifactId>springboot-start</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath><!-- lookup parent from repository -->
	</parent>

	<dependencies>
		<!--监控和管理Spring Boot应用 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!--admin客户端 -->
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>2.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
					<artifactId>asm</artifactId>
					<groupId>org.ow2.asm</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--引用FreeMarker前端模板引擎-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>

		<!-- 引入 thymeleaf 模板依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- 引入 redis 依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<!--Spring Boot aop-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<!-- 引入websocket依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

		<!-- webService-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>

		<!-- springboot 2.3之后消失的hibernate-validator解决方法-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!--解决thymeleaf中html格式不规范的问题（不一定需要结束标签）-->
		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<!--引入与mybatis相关的依赖-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!--mybatis-->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
		</dependency>
		<!--mapper-->
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper-spring-boot-starter</artifactId>
		</dependency>
		<!--pagehelper-->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
		</dependency>

		<!--druid连接池-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
		</dependency>

		<!--mybatis逆向工程-->
		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>

		<!--添加fastjson依赖-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>

		<!--lombok-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.20</version>
			<scope>provided</scope>
		</dependency>

		<!-- jquery-wabjars -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>jquery</artifactId>
					<groupId>org.webjars</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- 引入swagger2 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>

		<!--ant-->
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
		</dependency>

		<!-- CXF webservice -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-spring-boot-starter-jaxws</artifactId>
		</dependency>
		<!-- CXF webservice -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<!-- 打包后的启动jar名称 -->
		<finalName>admin-client</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<!--                控制打包之后包含哪些文件-->
				<includes>
					<include>sql/*.sql</include>
					<include>i18n/**</include>
					<include>mapper/**/*.xml</include>
					<include>static/**</include>
					<include>templates/**</include>
					<include>*.xml</include>
					<include>*.properties</include>
					<!--                     如果各个环境的jks都是一样，则可以直接打入到启动jar包中 -->
					<include>test.jks</include>
					<!--                     xxx.keystore -->
					<include>xxx.keystore</include>
					<include>banner.txt</include>
				</includes>
			</resource>

			<!-- 过滤配置文件到config目录 -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<targetPath>config</targetPath>
				<includes>
					<include>application.yml</include>
					<include>application-${profileActive}.yml</include>
					<include>**/*.properties</include>
					<!--                    <include>mapper/**/*.xml</include>-->
					<!--                    <include>static/**</include>-->
					<!--                    <include>templates/**</include>-->
					<include>*.xml</include>
					<!--                     xxx.keystore -->
					<include>xxx.keystore</include>
					<!-- 如果各个环境的jks不一样，则配置到外部config目录中
                        java代码中通过ClassPathFileUtil.getFile()获取 -->
					<!--                    <include>test.jks</include>-->
				</includes>
			</resource>

			<!-- 过滤脚本文件到bin目录 -->
			<resource>
				<directory>../bin</directory>
				<filtering>true</filtering>
				<targetPath>../bin</targetPath>
				<includes>
					<include>*.bat</include>
					<include>*.sh</include>
				</includes>
			</resource>

			<!-- 包含日志到logs目录 -->
			<resource>
				<directory>../logs</directory>
				<targetPath>../logs</targetPath>
				<includes>
					<include>*.log</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>

<!--		<plugins>-->
<!--			&lt;!&ndash;热加载插件&ndash;&gt;-->
<!--			&lt;!&ndash;<plugin>&ndash;&gt;-->
<!--			&lt;!&ndash;<groupId>org.springframework.boot</groupId>&ndash;&gt;-->
<!--			&lt;!&ndash;<artifactId>spring-boot-maven-plugin</artifactId>&ndash;&gt;-->
<!--			&lt;!&ndash;<configuration>&ndash;&gt;-->
<!--			&lt;!&ndash;配置devtool&ndash;&gt;-->
<!--			&lt;!&ndash;<fork>true</fork>&ndash;&gt;-->
<!--			&lt;!&ndash;</configuration>&ndash;&gt;-->
<!--			&lt;!&ndash;</plugin>&ndash;&gt;-->
<!--			&lt;!&ndash; springloaded实现热加载&ndash;&gt;-->
<!--			&lt;!&ndash;<plugin>&ndash;&gt;-->
<!--			&lt;!&ndash;<groupId>org.springframework.boot</groupId>&ndash;&gt;-->
<!--			&lt;!&ndash;<artifactId>spring-boot-maven-plugin</artifactId>&ndash;&gt;-->
<!--			&lt;!&ndash;<dependencies>&ndash;&gt;-->
<!--			&lt;!&ndash;<dependency>&ndash;&gt;-->
<!--			&lt;!&ndash;<groupId>org.springframework</groupId>&ndash;&gt;-->
<!--			&lt;!&ndash;<artifactId>springloaded</artifactId>&ndash;&gt;-->
<!--			&lt;!&ndash;<version>1.2.5.RELEASE</version>&ndash;&gt;-->
<!--			&lt;!&ndash;</dependency>&ndash;&gt;-->
<!--			&lt;!&ndash;</dependencies>&ndash;&gt;-->
<!--			&lt;!&ndash;</plugin>&ndash;&gt;-->

<!--			&lt;!&ndash; mybatis generator 自动生成代码插件 &ndash;&gt;-->
<!--			<plugin>-->
<!--				<groupId>org.mybatis.generator</groupId>-->
<!--				<artifactId>mybatis-generator-maven-plugin</artifactId>-->
<!--				<version>1.3.2</version>-->
<!--				<configuration>-->
<!--					<configurationFile>srcrces/generatorConfig.xml</configurationFile>-->
<!--					<overwrite>true</overwrite>-->
<!--					<verbose>true</verbose>-->
<!--				</configuration>-->
<!--			</plugin>-->

<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-jar-plugin</artifactId>-->
<!--				<version>3.1.0</version>-->
<!--				<configuration>-->
<!--					<archive>-->
<!--						<manifest>-->
<!--							&lt;!&ndash; 项目启动类 &ndash;&gt;-->
<!--							<mainClass>com.hackerstudy.adminclient.AdminClientApplication</mainClass>-->
<!--							&lt;!&ndash; 依赖的jar的目录前缀 &ndash;&gt;-->
<!--							<classpathPrefix>../lib</classpathPrefix>-->
<!--							<addClasspath>true</addClasspath>-->
<!--						</manifest>-->
<!--					</archive>-->
<!--					&lt;!&ndash; 项目启动jar包排除目录 &ndash;&gt;-->
<!--					<excludes>-->
<!--						<exclude>bin/**</exclude>-->
<!--						<exclude>config/**</exclude>-->
<!--						<exclude>logs/**</exclude>-->
<!--					</excludes>-->
<!--					&lt;!&ndash;                    <includes>&ndash;&gt;-->
<!--					&lt;!&ndash;                         只打包指定目录的文件 &ndash;&gt;-->
<!--					&lt;!&ndash;                        <include>com/hackerstudy/springboot-start/**</include>&ndash;&gt;-->
<!--					&lt;!&ndash;                    </includes>&ndash;&gt;-->
<!--				</configuration>-->
<!--			</plugin>-->

<!--			<plugin>-->
<!--				<groupId>org.springframework.boot</groupId>-->
<!--				<artifactId>spring-boot-maven-plugin</artifactId>-->
<!--				<configuration>-->
<!--					<layout>ZIP</layout>-->
<!--					<includes>-->
<!--						&lt;!&ndash; 项目启动jar包中排除依赖包 &ndash;&gt;-->
<!--						<include>-->
<!--							<groupId>non-exists</groupId>-->
<!--							<artifactId>non-exists</artifactId>-->
<!--						</include>-->
<!--					</includes>-->
<!--				</configuration>-->
<!--			</plugin>-->

<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-dependency-plugin</artifactId>-->
<!--				<version>3.1.0</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<phase>prepare-package</phase>-->
<!--						<goals>-->
<!--							<goal>copy-dependencies</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<outputDirectory>target/lib</outputDirectory>-->
<!--							<overWriteReleases>false</overWriteReleases>-->
<!--							<overWriteSnapshots>false</overWriteSnapshots>-->
<!--							<overWriteIfNewer>true</overWriteIfNewer>-->
<!--							<includeScope>compile</includeScope>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->

<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-resources-plugin</artifactId>-->
<!--				<version>3.1.0</version>-->
<!--			</plugin>-->

<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-compiler-plugin</artifactId>-->
<!--				<configuration>-->
<!--					<source>${java.version}</source>-->
<!--					<target>${java.version}</target>-->
<!--				</configuration>-->
<!--			</plugin>-->

<!--			&lt;!&ndash; 打包时跳过测试 &ndash;&gt;-->
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-surefire-plugin</artifactId>-->
<!--				<version>2.22.1</version>-->
<!--				<configuration>-->
<!--					<skipTests>true</skipTests>-->
<!--				</configuration>-->
<!--			</plugin>-->

<!--			&lt;!&ndash; 打包插件 &ndash;&gt;-->
<!--			<plugin>-->
<!--				<artifactId>maven-assembly-plugin</artifactId>-->
<!--				<version>3.1.0</version>-->
<!--				<configuration>-->
<!--					<descriptors>-->
<!--						<descriptor>src/main/assembly/assembly.xml</descriptor>-->
<!--					</descriptors>-->
<!--				</configuration>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>make-assembly</id>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>single</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
<!--		</plugins>-->
	</build>

	<!--MAVEN打包选择运行环境-->
	<!-- 1:local(默认) 本地 2:dev:开发环境 3:qa 4:uat 用户验收测试 5.pro:生产环境-->
	<profiles>
		<profile>
			<id>local</id>
			<properties>
				<profileActive>local</profileActive>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<profileActive>dev</profileActive>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>qa</id>
			<properties>
				<profileActive>qa</profileActive>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>uat</id>
			<properties>
				<profileActive>uat</profileActive>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<profileActive>prod</profileActive>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
	</profiles>

	<repositories>
		<!--阿里云仓库-->
		<repository>
			<id>aliyun</id>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
		</repository>
	</repositories>

</project>
