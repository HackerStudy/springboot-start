####################################
# server 服务端相关的配置
# server - tomcat 相关常用配置
####################################
server:
  port: 8080  # 配置api端口号
  context-path: /admin-client # 配置context-path,一般来说这个配置在正式发布的时候不配置
#  error:
#    path: /error # 错误页，指定错误发生时，跳转的url -->BasicErrorController
  session:
    timeout: 60 # session最大超时时间（分钟），默认为30分钟
#  address: 192.168.68.72 # 该服务绑定ip地址，启动服务器时如本机不是该ip地址则抛出异常启动失败，只有特殊需求的情况下才配置，具体根据各自的业务需求来设置
  tomcat:  ## tomcat配置
    max-threads: 250 # tomcat最大线程数，默认为200
    uri-encoding: UTF-8 # tomcat的url编码
#    basedir: E:/springboot-tomcat-tmp # 存放tomcat的日志、dump等文件的临时文件夹，默认为系统的tmp文件夹 （如：C:\Users\Shanhy\AppData\Local\Temp）
#    accesslog:      # 打开tomcat的Access日志，并可以设置日志格式的方法
#      enabled: true
#      pattern:
#      directory:  # accesslog目录,默认在basedir/logs

# 查看springboot开启了哪些配置
#debug: true

#logging:
#  path: E:/springboot-tomcat-tmp # 日志文件目录
#  file: admin-client.log # 日志文件名称，默认为spring.log


#######################
# spring相关的配置
#######################
spring:
  thymeleaf:  ## thymeleaf 静态资源配置
    cache: false  # 关闭缓存，及时刷新，上线生产环境需要改为true
    prefix: classpath:/templates/
    suffix: .html
    mode: LEGACYHTML5 # 指定文件类型（不为严格的HTML5类型）
    encoding: UTF-8
    content-type: text/html
  freemarker:  ## freemarker 静态资源配置
    template-loader-path: classpath:/templates  # 设定ftl文件路径
    cache: false  # 关闭缓存，及时刷新，上线生产环境需要改为true
    charset: UTF-8
    check-template-location: true
    content-type: text/html
    expose-request-attributes: true
    expose-session-attributes: true
    request-context-attribute: request
    suffix: .ftl
  devtools:        ## 热部署
    restart:
      enabled: true  # 热部署生效
      additional-paths: src/main/java # 设置重启的目录(让devtools监听指定文件夹)（对于class文件的热部署）
      exclude: WEB-INF/**,static/**  # 排除那个目录的文件不需要restart,classpath目录下的WEB-INF文件夹内容修改不重启
  mvc:
    static-path-pattern: /static/** #设定静态文件路径，js,css等
  messages:    # 配置i18n 资源文件，供thymeleaf读取
    basename: i18n/messages
    cache-seconds: 3600
    encoding: UTF-8
  datasource:  ## 配置数据源相关 使用Alibaba的Druid数据源
    name: springboot_start
    url: jdbc:mysql://localhost:3306/springboot_start?characterEncoding=utf8&useSSL=true
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    druid:
      initial-size: 1
      min-idle: 1
      max-active: 20
      test-on-borrow: true
      stat-view-servlet-allow: true
  redis:    #redis的配置
    database: 1 #redis的数据库索引（默认为0）
    host: 192.168.99.100 #redis服务器地址
    port: 6379  #redis 服务器连接端口
    password: 123456 # redis服务器连接密码（默认为空）
    pool:
      max-active: 1000  # 连接池的最大连接数（使用负值表示没有限制）
      max-wait: -1 # 连接池的最大阻塞时间（使用负值表示没有限制）
      max-idle: 10 # 连接池的最大空闲链接
      min-idle: 0 # 连接池的最小空闲链接
    timeout: 1000 # 连接超时时间（毫秒）

#########################
#
# mybatis的配置
#
#########################
restart:      #mybatis的热部署
  include:
    mapper: /mapper-[\\w-\\.]+jar
    pagehelper: /pagehelper-[\\w-\\.]+jar
mybatis:  # mybatis配置
  type-aliases-package: com.hackerstudy.adminclient.pojo
  mapper-locations: classpath*:mapper/*.xml
mapper:  # 通用Mapper配置
  mappers: com.hackerstudy.adminclient.common.dao.BaseMapper
  not-empty: false
  identity: MYSQL  # 方言
pagehelper: # 分页插件配置
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
